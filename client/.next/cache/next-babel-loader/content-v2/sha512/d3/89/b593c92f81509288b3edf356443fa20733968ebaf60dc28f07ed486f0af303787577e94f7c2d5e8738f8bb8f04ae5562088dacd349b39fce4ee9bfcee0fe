{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/le15/IdeaProjects/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/le15/IdeaProjects/next-apollo-demo/client/pages/list.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FixedSizeGrid as Grid } from 'react-window';\nvar GUTTER_SIZE = 5;\nvar COLUMN_WIDTH = 100;\nvar ROW_HEIGHT = 35;\n\nvar Cell = function Cell(_ref) {\n  var columnIndex = _ref.columnIndex,\n      rowIndex = _ref.rowIndex,\n      style = _ref.style;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      left: style.left + GUTTER_SIZE,\n      top: style.top + GUTTER_SIZE,\n      width: style.width - GUTTER_SIZE,\n      height: style.height - GUTTER_SIZE,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#f8f8f0'\n    }),\n    children: [\"r\", rowIndex, \", c\", columnIndex]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Cell;\n\nvar Example = function Example() {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columnCount: 50,\n    columnWidth: COLUMN_WIDTH + GUTTER_SIZE,\n    height: 150,\n    rowCount: 100,\n    rowHeight: ROW_HEIGHT + GUTTER_SIZE,\n    width: 300,\n    children: Cell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = Example;\nexport default Example;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["/Users/le15/IdeaProjects/next-apollo-demo/client/pages/list.tsx"],"names":["FixedSizeGrid","Grid","GUTTER_SIZE","COLUMN_WIDTH","ROW_HEIGHT","Cell","columnIndex","rowIndex","style","left","top","width","height","display","alignItems","justifyContent","backgroundColor","Example"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAa,IAAIC,IAA1B,QAAsC,cAAtC;AAEA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,UAAU,GAAG,EAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,MAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,MAA0BC,KAA1B,QAA0BA,KAA1B;AAAA,sBACX;AACE,IAAA,KAAK,kCACAA,KADA;AAEHC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,GAAaP,WAFhB;AAGHQ,MAAAA,GAAG,EAAEF,KAAK,CAACE,GAAN,GAAYR,WAHd;AAIHS,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcT,WAJlB;AAKHU,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,GAAeV,WALpB;AAMHW,MAAAA,OAAO,EAAE,MANN;AAOHC,MAAAA,UAAU,EAAE,QAPT;AAQHC,MAAAA,cAAc,EAAE,QARb;AASHC,MAAAA,eAAe,EAAE;AATd,MADP;AAAA,oBAaIT,QAbJ,SAaiBD,WAbjB;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,CAAb;;KAAMD,I;;AAkBN,IAAMY,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,sBACE,QAAC,IAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,WAAW,EAAEd,YAAY,GAAGD,WAF9B;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,QAAQ,EAAE,GAJZ;AAKE,IAAA,SAAS,EAAEE,UAAU,GAAGF,WAL1B;AAME,IAAA,KAAK,EAAE,GANT;AAAA,cAQGG;AARH;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAbD;;MAAMY,O;AAeN,eAAeA,OAAf","sourcesContent":["import { FixedSizeGrid as Grid } from 'react-window';\n\nconst GUTTER_SIZE = 5;\nconst COLUMN_WIDTH = 100;\nconst ROW_HEIGHT = 35;\n\nconst Cell = ({ columnIndex, rowIndex, style }) => (\n  <div\n    style={{\n      ...style,\n      left: style.left + GUTTER_SIZE,\n      top: style.top + GUTTER_SIZE,\n      width: style.width - GUTTER_SIZE,\n      height: style.height - GUTTER_SIZE,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#f8f8f0',\n    }}\n  >\n    r{rowIndex}, c{columnIndex}\n  </div>\n);\n\nconst Example = () => {\n  return (\n    <Grid\n      columnCount={50}\n      columnWidth={COLUMN_WIDTH + GUTTER_SIZE}\n      height={150}\n      rowCount={100}\n      rowHeight={ROW_HEIGHT + GUTTER_SIZE}\n      width={300}\n    >\n      {Cell}\n    </Grid>\n  );\n};\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}