{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/le15/IdeaProjects/next-apollo-demo/client/components/Name.tsx\";\nimport { gql, useQuery } from '@apollo/client';\nconst query = gql`\n  query {\n    getList {\n      name\n      address\n      email\n      phone\n    }\n  }\n`;\n\nconst Name = () => {\n  const {\n    loading,\n    data,\n    fetchMore\n  } = useQuery(query);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(data);\n  return data.list.map(({\n    name,\n    address,\n    email,\n    phone\n  }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n};\n\nexport default Name;","map":{"version":3,"sources":["/Users/le15/IdeaProjects/next-apollo-demo/client/components/Name.tsx"],"names":["gql","useQuery","query","Name","loading","data","fetchMore","console","log","list","map","name","address","email","phone","index"],"mappings":";;AAAA,SAASA,GAAT,EAA2BC,QAA3B,QAA2C,gBAA3C;AAEA,MAAMC,KAAK,GAAGF,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMG,IAAI,GAAG,MAAmB;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA4CL,QAAQ,CAACC,KAAD,CAA1D;;AAEA,MAAIE,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAOA,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAc,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAD,EAAkCC,KAAlC,kBACnB;AAAA,4BACE;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAQD,CAhBD;;AAkBA,eAAeZ,IAAf","sourcesContent":["import { gql, QueryResult, useQuery } from '@apollo/client';\n\nconst query = gql`\n  query {\n    getList {\n      name\n      address\n      email\n      phone\n    }\n  }\n`;\n\nconst Name = (): JSX.Element => {\n  const { loading, data, fetchMore }: QueryResult = useQuery(query);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n  console.log(data);\n\n  return data.list.map(({ name, address, email, phone }, index) => (\n    <div key={index}>\n      <div>{name}</div>\n      <div>{address}</div>\n      <div>{email}</div>\n      <div>{phone}</div>\n    </div>\n  ));\n};\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}